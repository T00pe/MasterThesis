#### LIBRARIES ####
library(tidyverse)
library(lme4)
library(DHARMa)
library(PerformanceAnalytics)
library(MuMIn)
library(effects)
library(gtsummary)
library(car)
library(cowplot)
library(lattice)

# Modified function from the package "Performance Analytics" allowing me to change the size of characters
my.chart.Correlation <- function (R, histogram = TRUE, method = c("pearson", "kendall", "spearman"), cex.val,...){
  x = checkData(R, method = "matrix")
  if (missing(method)) 
    method = method[1]
  panel.cor <- function(x, y, digits = 2, prefix = "", use = "pairwise.complete.obs", 
                        method = "pearson", cex.cor, ...) {
    usr <- par("usr")
    on.exit(par(usr))
    par(usr = c(0, 1, 0, 1))
    r <- cor(x, y, use = use, method = method)
    txt <- format(c(r, 0.123456789), digits = digits)[1]
    txt <- paste(prefix, txt, sep = "")
    if (missing(cex.cor)) 
      cex <- cex.val/strwidth(txt)
    test <- cor.test(as.numeric(x), as.numeric(y), method = method)
    Signif <- symnum(test$p.value, corr = FALSE, na = FALSE, 
                     cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1), symbols = c("***", 
                                                                              "**", "*", ".", " "))
    text(0.5, 0.5, txt, cex = cex * (abs(r) + 0.3)/1.3)
    text(0.8, 0.8, Signif, cex = cex, col = 2)
  }
  f <- function(t) {
    dnorm(t, mean = mean(x), sd = sd.xts(x))
  }
  dotargs <- list(...)
  dotargs$method <- NULL
  rm(method)
  hist.panel = function(x, ... = NULL) {
    par(new = TRUE)
    hist(x, col = "light gray", probability = TRUE, axes = FALSE, 
         main = "", breaks = "FD")
    lines(density(x, na.rm = TRUE), col = "red", lwd = 1)
    rug(x)
  }
  if (histogram) 
    pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, 
          diag.panel = hist.panel, ...)
  else pairs(x, gap = 0, lower.panel = panel.smooth, upper.panel = panel.cor, ...)
}

#### DATA MANAGMENT ####

# data import
df <- read.csv(file = "FinalData.csv", sep=",")

# subset containing unique values for altitude, temperature and precipitation
dfCor <- df %>%
  select(AltMean, Tmin, Prec)%>%
  unique(.)

#### CORRELATION ####

# Coorelation matrix between Alt Temp and Prec
cor(dfCor, method = "pearson")

# plot of this correlation matrix
my.chart.Correlation(dfCor, histogram = T, pch=1, method = "pearson", cex.labels = 2.5, cex.val = 0.5, main="")

# individual correlations
cor.test(dfCor$AltMean, dfCor$Tmin, method = "pearson")
cor.test(dfCor$AltMean, dfCor$Prec, method = "pearson")


#### MODELING ####

# Generalized mixed-effect model with binomial distribution
# Sex-ratio is the chance of being a male -> female = 0 // male = 1
m5 <- glmer(Male  ~  AltMean + FlowStrong + Water + TreeVeg + HerbaVeg + BuissoVeg + NoVeg + RoadDist + (1|Site), df, family = binomial("logit"), na.action = "na.fail")
summary(m5)

# DHARMa package offer nice tools to verify the viability of the model

Sim5Out <- simulateResiduals(m5)
plotQQunif(Sim5Out, testUniformity = T, testOutliers = T, testDispersion = T)


#### VIF ####

# Variance Inflation Factor is used to assess collinearity of variables in the model
m5_vif <- vif(m5); m5_vif

# VIF management for ploting it
m5_vif <- as.data.frame(m5_vif)
colnames(m5_vif) <- c("VIF")
m5_vif <- rownames_to_column(m5_vif, "Var")
m5_vifRename <- m5_vif %>%
  mutate(Var = str_replace(Var, "AltMean", "Altitude"),
         Var = str_replace(Var, "HerbaVeg", "Open area"),
         Var = str_replace(Var, "TreeVeg", "Proportion of trees"),
         Var = str_replace(Var, "Water", "Water surfaces"),
         Var = str_replace(Var, "FlowStrong", "Strong water flow-rate"),
         Var = str_replace(Var, "NoVeg", "Non vegetation area"),
         Var = str_replace(Var, "BuissoVeg", "Proportion of bushes"),
         Var = str_replace(Var, "RoadDist", "Distance to nearest roads"))
# plot
v1_plot <- ggplot(data = m5_vifRename)+
  geom_col(aes(x=Var, y=VIF), fill="#0D15FF")+
  geom_hline(aes(yintercept=5),linetype="dashed", color="#CD3333", lwd=1.5)+
  annotate("text", x=1.15, y=4.8, label = "Tolerable", color="#CD3333", size=8)+
  geom_hline(aes(yintercept=3),linetype="dashed", color="#009E08", lwd=1.5)+
  annotate("text", x=0.9, y=2.8, label = "Good", color="#009E08", size=8)+
  theme_bw()+
  labs(title = "Variance inflated factor (VIF)")+
  xlab("Variables")+
  ylab("VIF score")+
  theme(axis.title = element_text(size = 17), axis.text = element_text(size = 12), axis.text.x = element_text(size = 12, vjust = 0.5, angle = 45)) + theme(plot.title = element_text(size = 20, face = "bold"));v1_plot
v1_plot

#### MODEL AVERAGING ####

# Dredge function implemented in MuMIn package allow us to average simpler models by their weight 
dredge(m5, beta = T, extra = "R^2")
m5_avg <- model.avg(dredge(m5, beta = T, extra = "R^2"), subset = cumsum (weight <= 0.95))

# Confidence interval of the model averaging
m5_confint <- confint(m5_avg); m5_confint

# Result of the model averaging
m5_summary <- summary(m5_avg); m5_summary

# Importance of each variable by sum of weights classification
importance(m5_avg)

# Results management for ploting results
# Creating master table
m5_confint <- as.data.frame(m5_confint)
m5_summary <- as.data.frame(m5_summary$coefmat.subset)
m5_plot <- cbind(m5_confint, Estimate = m5_summary$Estimate, Pval = m5_summary$`Pr(>|z|)`)
m5_plot <- rownames_to_column(m5_plot, "Var")
colnames(m5_plot) <- c("Var", "Ci25","Ci975","Est", "Pval")
m5_plot$sig <- cut(m5_plot$Pval, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf), labels = c("***","**","*",""))

# Renaming variables
m5_plotRename <- m5_plot %>%
  mutate(Var = str_replace(Var, "AltMean", "Altitude"),
         Var = str_replace(Var, "HerbaVeg", "Open area"),
         Var = str_replace(Var, "TreeVeg", "Proportion of trees"),
         Var = str_replace(Var, "Water", "Water surfaces"),
         Var = str_replace(Var, "FlowStrong", "Strong water flow-rate"),
         Var = str_replace(Var, "NoVeg", "Non vegetation area"),
         Var = str_replace(Var, "BuissoVeg", "Proportion of bushes"),
         Var = str_replace(Var, "RoadDist", "Distance to nearest roads"))
# plot
ggplot(data = m5_plotRename[-1,], aes(x=Var, y=Est))+
  geom_point(size = 4)+
  geom_hline(yintercept=0, color = "red",linetype="dashed", lwd=0.8)+
  geom_errorbar(aes(ymin=Ci25, ymax=Ci975), colour="blue", width=0, lwd=0.8)+
  coord_flip()+
  theme_bw(base_size = 30)+
  ylab("Variables' Effects")+
  xlab("Predictive variables")+
  geom_text(aes(label=sig), vjust=-0.5, size=10)+
  labs(title="Male biased sex-ratio", caption = "Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ")+
  theme(plot.caption = element_text(face = "italic", hjust = 0))

# plot of the effect of the model averaging results 
trellis.par.get()
trellis.par.set(list(par.xlab.text = list(cex=2),
                     par.ylab.text = list(cex=2),
                     par.main.text = list(cex=2.5),
                     axis.text = list(cex=1.5)))
mycol <- rgb(0, 0, 255, max = 255, alpha = 0, names = "blue50")
plot(Effect(c("TreeVeg"), m5, residuals=T), residuals.color="Black", residuals.smooth.color = mycol, main="Proportion of trees effect plot", ylab = "Male biased sex-ratio", xlab = "Proportion of trees")
plot(Effect(c("AltMean"), m5, residuals=T), residuals.color="Black", residuals.smooth.color = mycol, main="Altitude effect plot", ylab = "Male biased sex-ratio", xlab = "Altitude")





